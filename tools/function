function set_password {
    set +o xtrace
    var=$1;
    pw=${!var}
    localrc=$TOP_DIR/localrc
    if [ ! $pw ]; then
        if [ ! -e $localrc ]; then
            touch $localrc
        fi
        pw=`openssl rand -hex 10`
        eval "$var=$pw"
        echo "$var=$pw" >> $localrc
    fi
    set -o xtrace
}

function mysql_cmd() {
    set +o xtrace
    mysql -uroot -p$MYSQL_ROOT_PASSWORD -h$MYSQL_HOST -e "$@"
    set -o xtrace
}

function source_install() {
    cd $DEST/$1
    git checkout master
    python setup.py build
    python setup.py develop
}

function add_line() {
    local file_content=$2
    local add_content=$3
    local init_file=$1
    local line_number=`grep -n "$file_content" $init_file`
    local line_number=${line_number%%:*}
    for n in $line_number
    do
        sed -i "${n} a$add_content"  $init_file
    done
}

function get_id () {
    export SERVICE_TOKEN=$ADMIN_TOKEN
    export SERVICE_ENDPOINT=http://$KEYSTONE_HOST:35357/v2.0
    echo `"$@" | awk '/ id / { print $4 }'`
}

function get_tenant {
    set +o xtrace
    var=$1;
    pw=${!var}
    export SERVICE_TOKEN=$ADMIN_TOKEN
    export SERVICE_ENDPOINT=http://$KEYSTONE_HOST:35357/v2.0
    echo $SERVICE_TOKEN
    pw=`keystone tenant-list | grep $2 | awk '{print $2}'`
    eval "$var=$pw"
    set -o xtrace
}

function get_role {
    set +o xtrace
    var=$1;
    pw=${!var}
    export SERVICE_TOKEN=$ADMIN_TOKEN
    export SERVICE_ENDPOINT=http://$KEYSTONE_HOST:35357/v2.0
    pw=`keystone role-list | grep $2 | awk '{print $2}'`
    eval "$var=$pw"
    set -o xtrace
}

function setup_iptables() {

    sed -i "/exit/d" /etc/rc.local
    sed -i "/iptable/d" /etc/rc.local

    for n in 3306 5672 5000 35357 9191 9292 8773 8774 8775 8776 5900:6400 3260 9696 6080 80; do
        echo "iptables -I INPUT 1 -p tcp --dport $n -j ACCEPT" >> /etc/rc.local
    done
    echo "exit 0" >> /etc/rc.local
}

function pip_install () {
    pip install $TOPDIR/pip/$1 -i file://$TOPDIR/pip/ -f file://$TOPDIR/pip/
}

function solve_dep() {
[[ ! -d $DEST ]] && mkdir -p $DEST
if [[ ! -d $DEST/nova ]]; then

    cp -rf $TOPDIR/cloud/* /opt/stack/
    #pam, WebOb, PasteDeploy, paste, sqlalchemy, passlib
    pip_install pam-0.1.4.tar.gz
    pip_install WebOb-1.0.8.zip
    pip_install PasteDeploy-1.5.0.tar.gz
    pip_install Paste-1.7.5.1.tar.gz
    pip_install SQLAlchemy-0.7.9.tar.gz
    pip_install passlib-1.6.1.tar.gz
    source_install keystone

    pip_install prettytable-0.6.1.tar.bz2
    source_install python-keystoneclient

    source_install python-swiftclient

    pip_install eventlet-0.9.15.tar.gz
    pip_install netifaces-0.6.tar.gz
    pip_install PasteDeploy-1.3.3.tar.gz    
    pip_install simplejson-2.0.9.tar.gz
    pip_install xattr-0.4.tar.gz
    source_install swift

    source_install swift3

    pip_install boto-2.1.1.tar.gz
    pip_install jsonschema-0.7.zip
    source_install glance

    pip_install warlock-0.7.0.tar.gz
    pip_install jsonpatch-0.10.tar.gz
    pip_install jsonpointer-0.5.tar.gz
    source_install python-glanceclient

    pip_install amqplib-0.6.1.tgz
    pip_install eventlet-0.9.17.tar.gz
    pip_install kombu-1.0.4.tar.gz
    pip_install lockfile-0.8.tar.gz
    pip_install python-daemon-1.5.5.tar.gz
    pip_install PasteDeploy-1.5.0.tar.gz
    pip_install suds-0.4.tar.gz
    pip_install paramiko-1.9.0.tar.gz
    pip_install Babel-0.9.6.tar.gz
    pip_install setuptools-git-0.4.2.tar.gz
    source_install cinder

    source_install python-cinderclient

    pip_install cliff-1.3.tar.gz
    pip_install pyparsing-1.5.6.zip
    pip_install cmd2-0.6.4.tar.gz
    source_install python-quantumclient

    source_install quantum

    pip_install Cheetah-2.4.4.tar.gz
    pip_install Markdown-2.2.1.tar.gz
    source_install nova

    source_install python-novaclient
    source_install python-openstackclient

    pip_install Django-1.4.2.tar.gz
    pip_install django_compressor-1.2.tar.gz
    pip_install django_openstack_auth-1.0.4.tar.gz
    pip_install pytz-2012h.tar.bz2
    pip_install django-appconf-0.5.tar.gz
    source_install horizon        
fi
}

function complie_libvirt() {
if [[ ! -d /opt/libvirt-0.10.2 ]]; then
    old_dir=`pwd`
    now_dir=$(cd $(dirname "$0") && pwd)
    cp -rf $now_dir/tools/libvirt-0.10.2.tar.gz /opt/
    cd /opt/
    tar zxf /opt/libvirt-0.10.2.tar.gz
    cd libvirt-0.10.2
    ./configure --prefix=/usr
    make; make install
    cd $old_dir
fi
}

